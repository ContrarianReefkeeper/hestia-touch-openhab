//DHT Humi
//Thing exec:command:gethumi [ command="/home/pi/scripts/AdafruitDHTHum.py 11 16", interval=60, timeout=20 ]
//BME Humi
Thing exec:command:gethumi [ command="/home/pi/scripts/getBMEhumi.sh", interval=10, timeout=5 ]

//DHT Temp
//Thing exec:command:gettemp [ command="/home/pi/scripts/AdafruitDHTTemp.py 11 16", interval=60, timeout=20 ]
//BME280 Temp
Thing exec:command:gettemp [ command="/home/pi/scripts/getBMEtemp.sh", interval=10, timeout=5 ]
//BME280 atmospheric pressure
Thing exec:command:getpress [ command="/home/pi/scripts/getBMEpress.sh", interval=60, timeout=5 ]

Thing exec:command:getwlanip [ command="/home/pi/scripts/getwlan0ip.sh", interval=600, timeout=20 ]
Thing exec:command:getwlanmac [ command="/home/pi/scripts/getwlan0mac.sh", timeout=20 ]
Thing exec:command:getssid [ command="/home/pi/scripts/getssid.sh", interval=600, timeout=20 ]
Thing exec:command:getwifiinfo [ command="/home/pi/scripts/getwifiinfo.sh", interval=600, timeout=20 ]

Thing exec:command:getcputemperature [ command="/home/pi/scripts/getcputemperature.sh", interval=600, timeout=20 ]
Thing exec:command:getuseddiskspace [ command="/home/pi/scripts/getuseddiskspace.sh", interval=600, timeout=20 ]
Thing exec:command:getuptime "Uptime" [command="/home/pi/scripts/getuptime.sh", interval=300, timeout=15, autorun=false]
Thing exec:command:getcpuload "CPU Load" [command="/home/pi/scripts/getcpuload.sh", interval=60, timeout=15, autorun=false]
Thing exec:command:gettz [ command="/home/pi/scripts/gettz.sh", interval=600, timeout=20 ]

Thing exec:command:gettempunit "gettempunit" [command="/home/pi/scripts/gettempunit.sh", interval=0, timeout=15, autorun=true]
Thing exec:command:gethumiditymode "gethumiditymode" [command="/home/pi/scripts/gethumiditymode.sh", interval=0, timeout=15, autorun=true]
Thing exec:command:getsystemtype "getsystemtype" [command="/home/pi/scripts/getsystemtype.sh", interval=0, timeout=15, autorun=true]
Thing exec:command:getseason "getseason" [command="/home/pi/scripts/getseason.sh", interval=0, timeout=15, autorun=true]

Thing exec:command:rebootcommand "Reboot" [command="/home/pi/scripts/reboot.sh", interval=0, timeout=15, autorun=false]
Thing exec:command:shutdowncommand "Shutdown" [command="/home/pi/scripts/shutdown.sh", interval=0, timeout=15, autorun=false]
Thing exec:command:backupcommand "Backup" [command="/home/pi/scripts/backup.sh", interval=0, timeout=120, autorun=false]
Thing exec:command:getbackuptimestampcommand [command="/home/pi/scripts/getbackuptimestamp.sh", interval=0, timeout=150, autorun=false]
Thing exec:command:restorecommand "Restore" [command="/home/pi/scripts/restore.sh &", interval=0, timeout=120, autorun=false]

Bridge mqtt:broker:mosquitto "Mosquitto MQTT Broker" [ host="localhost", secure=false, port=1883, clientID="mosquitto"]
{

  Thing topic HeatingPin {
    Channels:
      Type switch : switch "HeatingPin Switch" [
        commandTopic="hestia/local/cmnd/heatingstate/POWER",
        stateTopic="hestia/local/stat/heatingstate/power",
        on="ON",
        off="OFF"
      ]
  }

  Thing topic Heating2Pin {
    Channels:
      Type switch : switch "Heating2Pin Switch" [
        commandTopic="hestia/local/cmnd/heating2state/POWER",
        stateTopic="hestia/local/stat/heating2state/power",
        on="ON",
        off="OFF"
      ]
  }

  Thing topic CoolingPin {
    Channels:
      Type switch : switch "CoolingPin Switch" [
        commandTopic="hestia/local/cmnd/coolingstate/POWER",
        stateTopic="hestia/local/stat/coolingstate/power",
        on="ON",
        off="OFF"
      ]
  }

  Thing topic FanPin {
    Channels:
      Type switch : switch "FanPin Switch" [
        commandTopic="hestia/local/cmnd/fanstate/POWER",
        stateTopic="hestia/local/stat/fanstate/power",
        on="ON",
        off="OFF"
      ]
  }

  Thing topic HumidityPin {
    Channels:
      Type switch : switch "HumidityPin Switch" [
        commandTopic="hestia/local/cmnd/humiditystate/POWER",
        stateTopic="hestia/local/stat/humiditystate/power",
        on="ON",
        off="OFF"
      ]
  }

  // HumiTopic for syncing with incoming external button commands
  Thing topic HumiTopic {
    Channels:
      Type string : string "HumiTopic" [
        commandTopic="hestia/local/cmnd/humiditystate/POWER",
        stateTopic="hestia/local/stat/humiditystate/power"
      ]
  }

  Thing topic HotWaterPin {
    Channels:
      Type switch : switch "HotWaterPin Switch" [
        commandTopic="hestia/local/cmnd/hotwaterstate/POWER",
        stateTopic="hestia/local/stat/hotwaterstate/power",
        on="ON",
        off="OFF"
      ]
  }

  // MyTempProxy
  Thing topic MyTempProxy {
    Channels:
      Type number : temperature "MyTempProxy" [
        commandTopic="hestia/local/temperature"
      ]
  }

  // MyHumiProxy
    Thing topic MyHumiProxy {
      Channels:
      Type number : humidity "MyHumiProxy" [
        commandTopic="hestia/local/humidity"
      ]
  }

  // MyPressureProxy
    Thing topic MyPressureProxy {
      Channels:
      Type number : pressure "MyPressureProxy" [
        commandTopic="hestia/local/pressure"
      ]
  }

  // TempSetpoint
//    Thing topic TempSetpoint {
//      Channels:
//      Type number : temperature "TempSetpoint" [
//        commandTopic="hestia/local/tempsetpoint",
//        stateTopic="hestia/local/settempsetpoint"
//      ]
//  }

  // HumiSetpoint
//    Thing topic HumiSetpoint {
//      Channels:
//      Type number : humidity "HumiSetpoint" [
//        commandTopic="hestia/local/humisetpoint"
//      ]
//  }

  Thing topic FanMode {
    Channels:
      Type string : string "FanMode" [
        commandTopic="hestia/local/cmnd/fanmode",
        stateTopic="hestia/local/stat/fanmode"
      ]
  }
}
